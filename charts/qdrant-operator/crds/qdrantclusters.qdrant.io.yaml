apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: qdrantclusters.qdrant.io
spec:
  group: qdrant.io
  names:
    kind: QdrantCluster
    plural: qdrantclusters
    shortNames: []
    singular: qdrantcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Represents a Qdrant cluster.
        properties:
          spec:
            properties:
              image:
                description: Options for defining the container image.
                properties:
                  repository:
                    description: The image repository.
                    type: string
                  pullPolicy:
                    description: The image pull policy.
                    type: string
                  tag:
                    description: The image tag.
                    type: string
                type: object
              persistence:
                description: Persistence options.
                properties:
                  size:
                    description: The disk size for each cluster node.
                    type: string
                  storageClassName:
                    description: The storage class to use when creating volumes.
                    type: string
                type: object
              replicas:
                description: The number of servers to deploy in the cluster.
                format: int32
                type: integer
              metrics:
                description: Metrics related options.
                properties:
                  serviceMonitorEnabled:
                    description: Whether to create a Prometheus ServiceMonitor for the cluster.
                    type: boolean
                  grafana:
                    description: Grafana related options.
                    properties:
                      dashboardEnabled:
                        description: |-
                          Whether to create a GrafanaDashboard resource. This depends on the Grafana
                           Operator being installed.
                        type: boolean
                      datasourceName:
                        description: The datasource name to use for the dashboard.
                        type: string
                      instanceSelector:
                        description: The Grafana instance selector.
                        properties:
                          matchExpressions:
                            description: |-
                              matchExpressions is a list of label selector requirements. The requirements are
                               ANDed.
                            items:
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values. Valid operators are
                                     In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn, the values
                                     array must be non-empty. If the operator is Exists or DoesNotExist, the values
                                     array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the
                               matchLabels map is equivalent to an element of matchExpressions, whose key field
                               is "key", the operator is "In", and the values array contains only "value". The
                               requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  interval:
                    description: The metrics scrape interval. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: string
                  scrapeTimeout:
                    description: The metrics scrape timeout. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: string
                  honorLabels:
                    description: Whether to honor labels in the ServiceMonitor. QdrantOperator.Models.MetricsOptions.ServiceMonitorEnabled must be enabled.
                    type: boolean
                type: object
              nodeSelector:
                description: Where to put the servers.
                items:
                  properties:
                    key:
                      description: Gets the key in the key/value pair.
                      type: string
                    value:
                      description: Gets the value in the key/value pair.
                      type: string
                  type: object
                type: array
              antiAffinity:
                description: |-
                  Whether to add an antiAffinity rule to the statefulset. Enabling this will ensure
                   that only 1 qdrant container will be deployed per kubernetes host.
                type: boolean
              resources:
                description: The resource requirements for each qdrant server.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims, that are
                       used by this container.

                       This is an alpha field and requires enabling the DynamicResourceAllocation
                       feature gate.

                       This field is immutable. It can only be set for containers.
                    items:
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of the Pod
                             where this field is used. It makes that resource available inside a container.
                          type: string
                      type: object
                    type: array
                  limits:
                    additionalProperties:
                      properties:
                        format:
                          enum:
                          - decimalexponent
                          - binarysi
                          - decimalsi
                          type: string
                        value:
                          type: string
                      type: object
                    description: |-
                      Limits describes the maximum amount of compute resources allowed. More info:
                       https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      properties:
                        format:
                          enum:
                          - decimalexponent
                          - binarysi
                          - decimalsi
                          type: string
                        value:
                          type: string
                      type: object
                    description: |-
                      Requests describes the minimum amount of compute resources required. If Requests
                       is omitted for a container, it defaults to Limits if that is explicitly
                       specified, otherwise to an implementation-defined value. Requests cannot exceed
                       Limits. More info:
                       https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              podSecurityContext:
                description: The pod security context options.
                properties:
                  fsGroup:
                    description: |-
                      A special supplemental group that applies to all containers in a pod. Some
                       volume types allow the Kubelet to change the ownership of that volume to be
                       owned by the pod:

                       1. The owning GID will be the FSGroup 2. The setgid bit is set (new files
                       created in the volume will be owned by FSGroup) 3. The permission bits are OR'd
                       with rw-rw----

                       If unset, the Kubelet will not modify the ownership and permissions of any
                       volume. Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: |-
                      fsGroupChangePolicy defines behavior of changing ownership and permission of the
                       volume before being exposed inside Pod. This field will only apply to volume
                       types which support fsGroup based ownership(and permissions). It will have no
                       effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid
                       values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                       Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process. Uses runtime default if
                       unset. May also be set in SecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence for
                       that container. Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user. If true, the Kubelet
                       will validate the image at runtime to ensure that it does not run as UID 0
                       (root) and fail to start the container if it does. If unset or false, no such
                       validation will be performed. May also be set in SecurityContext.  If set in
                       both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process. Defaults to user
                       specified in image metadata if unspecified. May also be set in SecurityContext. 
                       If set in both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence for that container. Note that this field cannot
                       be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to all containers. If unspecified, the
                       container runtime will allocate a random SELinux context for each container. 
                       May also be set in SecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence for
                       that container. Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by the containers in this pod. Note that this field
                       cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be
                           used. The profile must be preconfigured on the node to work. Must be a
                           descending path, relative to the kubelet's configured seccomp profile location.
                           Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied. Valid options are:

                           Localhost - a profile defined in a file on the node should be used.
                           RuntimeDefault - the container runtime default profile should be used.
                           Unconfined - no profile should be applied.
                        type: string
                    type: object
                  supplementalGroups:
                    description: |-
                      A list of groups applied to the first process run in each container, in addition
                       to the container's primary GID, the fsGroup (if specified), and group
                       memberships defined in the container image for the uid of the container process.
                       If unspecified, no additional groups are added to any container. Note that group
                       memberships defined in the container image for the uid of the container process
                       are still effective, even if they are not included in this list. Note that this
                       field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                  sysctls:
                    description: |-
                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with
                       unsupported sysctls (by the container runtime) might fail to launch. Note that
                       this field cannot be set when spec.os.name is windows.
                    items:
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      type: object
                    type: array
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers. If unspecified, the
                       options within a container's SecurityContext will be used. If set in both
                       SecurityContext and PodSecurityContext, the value specified in SecurityContext
                       takes precedence. Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                           (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                           GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process'
                           container. All of a Pod's containers must have the same effective HostProcess
                           value (it is not allowed to have a mix of HostProcess containers and
                           non-HostProcess containers). In addition, if HostProcess is true then
                           HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process. Defaults
                           to the user specified in image metadata if unspecified. May also be set in
                           PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the
                           value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              securityContext:
                description: The container security context options.
                properties:
                  allowPrivilegeEscalation:
                    description: |-
                      AllowPrivilegeEscalation controls whether a process can gain more privileges
                       than its parent process. This bool directly controls if the no_new_privs flag
                       will be set on the container process. AllowPrivilegeEscalation is true always
                       when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this
                       field cannot be set when spec.os.name is windows.
                    type: boolean
                  capabilities:
                    description: |-
                      The capabilities to add/drop when running containers. Defaults to the default
                       set of capabilities granted by the container runtime. Note that this field
                       cannot be set when spec.os.name is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: |-
                      Run container in privileged mode. Processes in privileged containers are
                       essentially equivalent to root on the host. Defaults to false. Note that this
                       field cannot be set when spec.os.name is windows.
                    type: boolean
                  procMount:
                    description: |-
                      procMount denotes the type of proc mount to use for the containers. The default
                       is DefaultProcMount which uses the container runtime defaults for readonly paths
                       and masked paths. This requires the ProcMountType feature flag to be enabled.
                       Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: |-
                      Whether this container has a read-only root filesystem. Default is false. Note
                       that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process. Uses runtime default if
                       unset. May also be set in PodSecurityContext.  If set in both SecurityContext
                       and PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user. If true, the Kubelet
                       will validate the image at runtime to ensure that it does not run as UID 0
                       (root) and fail to start the container if it does. If unset or false, no such
                       validation will be performed. May also be set in PodSecurityContext.  If set in
                       both SecurityContext and PodSecurityContext, the value specified in
                       SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process. Defaults to user
                       specified in image metadata if unspecified. May also be set in
                       PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the
                       value specified in SecurityContext takes precedence. Note that this field cannot
                       be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to the container. If unspecified, the
                       container runtime will allocate a random SELinux context for each container. 
                       May also be set in PodSecurityContext.  If set in both SecurityContext and
                       PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by this container. If seccomp options are provided at
                       both the pod & container level, the container options override the pod options.
                       Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be
                           used. The profile must be preconfigured on the node to work. Must be a
                           descending path, relative to the kubelet's configured seccomp profile location.
                           Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied. Valid options are:

                           Localhost - a profile defined in a file on the node should be used.
                           RuntimeDefault - the container runtime default profile should be used.
                           Unconfined - no profile should be applied.
                        type: string
                    type: object
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers. If unspecified, the
                       options from the PodSecurityContext will be used. If set in both SecurityContext
                       and PodSecurityContext, the value specified in SecurityContext takes precedence.
                       Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                           (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                           GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process'
                           container. All of a Pod's containers must have the same effective HostProcess
                           value (it is not allowed to have a mix of HostProcess containers and
                           non-HostProcess containers). In addition, if HostProcess is true then
                           HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process. Defaults
                           to the user specified in image metadata if unspecified. May also be set in
                           PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the
                           value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              podAnnotations:
                description: Optionally set some extra pod annotations.
                items:
                  properties:
                    key:
                      description: Gets the key in the key/value pair.
                      type: string
                    value:
                      description: Gets the value in the key/value pair.
                      type: string
                  type: object
                type: array
              podLabels:
                description: Optionally set some extra pod labels.
                items:
                  properties:
                    key:
                      description: Gets the key in the key/value pair.
                      type: string
                    value:
                      description: Gets the value in the key/value pair.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              message:
                description: The status message.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}